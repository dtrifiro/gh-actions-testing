name: Build Package

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: true

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build
        run: |
          python setup.py sdist bdist_wheel
        if: "matrix.os != 'ubuntu-latest'"
      - uses: docker/setup-qemu-action@v1
        name: Set up QEMU
        if: "matrix.os == 'ubuntu-latest'"
      - name: Build (Linux aarch64)
        uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2014_aarch64
        with:
          python-versions: "cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310"
        if: "matrix.os == 'ubuntu-latest'"
      - name: Build (Linux)
        uses: RalfG/python-wheels-manylinux-build@v0.3.1
        with:
          python-versions: "cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310"
        env:
          # Temporary fix for LD_LIBRARY_PATH issue. See
          # https://github.com/RalfG/python-wheels-manylinux-build/issues/26
          LD_LIBRARY_PATH: /usr/local/lib:${{ env.LD_LIBRARY_PATH }}
        if: "matrix.os == 'ubuntu-latest'"

  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false

    needs: build
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Publish (Linux)
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          # Only include *manylinux* wheels; the other wheels files are built but
          # rejected by pip.
          echo twine upload dist/*manylinux*.whl
        if: "matrix.os == 'ubuntu-latest'"
      - name: Publish (non-Linux)
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          echo twine upload dist/*.whl
        if: "matrix.os != 'ubuntu-latest'"
